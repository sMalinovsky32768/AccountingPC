<ResourceDictionary x:Name="Bootstrap" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:local="clr-namespace:AccountingPC">
    <!--<local:ResourceColorConverter x:Key="resColorConverter"/>
    <local:ResourceSolidColorBrushConverter x:Key="resSolidColorBrushConverter"/>-->

    <Color x:Key="darkBorder">#343a40</Color>
    <Color x:Key="darkBackground">#343a49</Color>
    
    
    <Color x:Key="lightBorder">#dedeef</Color>
    <Color x:Key="lightBackground">#cdcdee</Color>

    <EventTrigger RoutedEvent="Button.MouseEnter" x:Key="button-mouse-enter">
        
    </EventTrigger>

    <!--Button style-->
    <Style x:Key="btn-dark">
        <Setter Property="Button.Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border CornerRadius="5" BorderThickness="1" Name="btnDarkBorder" 
                                Padding="{TemplateBinding Padding}" 
                                BorderBrush="{DynamicResource gray-800-brush}" 
                                Background="{DynamicResource gray-700-brush}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" 
                                              TextElement.FontWeight="Bold" Name="btnDarkContent" 
                                              TextElement.Foreground="{DynamicResource gray-200-brush}">
                            </ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="btnDarkBorder" Property="BorderBrush" Value="{DynamicResource gray-900-brush}"/>
                            <Setter TargetName="btnDarkBorder" Property="Background" Value="{DynamicResource gray-900-brush}"/>
                            <Setter TargetName="btnDarkContent" Property="TextElement.Foreground" Value="{DynamicResource gray-100-brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="text-box">
        <Setter Property="TextBox.Foreground" Value="{DynamicResource gray-200-brush}"/>
        <Setter Property="TextBox.Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <Border CornerRadius="5" BorderThickness="1" x:Name="border"
                                BorderBrush="{DynamicResource gray-800-brush}" 
                                Background="{DynamicResource gray-700-brush}">
                            <!--Для отображения введенного текста-->
                            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource blue-gray-500-brush}"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="password-box">
        <Setter Property="PasswordBox.Foreground" Value="{DynamicResource gray-200-brush}"/>
        <Setter Property="PasswordBox.Margin" Value="10"/>
        <Setter Property="PasswordBox.Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Grid>
                        <Border CornerRadius="5" BorderThickness="1" x:Name="border"
                                BorderBrush="{DynamicResource gray-800-brush}" 
                                Background="{DynamicResource gray-700-brush}">
                            <!--Для отображения введенного текста-->
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost" VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource blue-gray-500-brush}"/>
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="GridSplitter">
        <Setter Property="Background" Value="{DynamicResource gray-800-brush}"/>
    </Style>

    <!--ScrollViewer for a MenuItem-->
    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />

    <Style x:Key="MenuScrollViewer" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1" Grid.Column="0">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <RepeatButton Grid.Row="0" Grid.Column="0" 
                                      Command="{x:Static ScrollBar.LineUpCommand}" 
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Focusable="False">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="0">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ComputedVerticalScrollBarVisibility"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="VerticalOffset"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ExtentHeight"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ViewportHeight"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource gray-200-brush}"/>
                        </RepeatButton>
                        <RepeatButton Grid.Row="2" Grid.Column="0" 
                                      Command="{x:Static ScrollBar.LineDownCommand}" 
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Focusable="False">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="100">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ComputedVerticalScrollBarVisibility"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="VerticalOffset"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ExtentHeight"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ViewportHeight"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource gray-200-brush}"/>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Menu">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderThickness="0" Background="{DynamicResource gray-800-brush}">
                        <StackPanel ClipToBounds="True" Orientation="Horizontal"
                                    IsItemsHost="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Separator">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="0 4 0 4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderThickness="1" BorderBrush="{DynamicResource gray-600-brush}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--TopLevelHeader-->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border">
            <Grid>
                <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True"/>
                <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                    <Border x:Name="SubmenuBorder" SnapsToDevicePixels="True"
                            BorderThickness="1" Background="{DynamicResource gray-800-brush}">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource gray-900}"/>
                        </Border.BorderBrush>
                        <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Background" TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{StaticResource gray-700}"/>
                                    <GradientStop Color="{StaticResource gray-800}" Offset="1.0"/>
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4"/>
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource blue-gray-500}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- TopLevelItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border">
            <Grid>
                <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{StaticResource gray-700}"/>
                                    <GradientStop Color="{StaticResource gray-800}" Offset="1.0"/>
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource blue-gray-500}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- SubmenuItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" BorderThickness="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>
                <Border x:Name="Check" Width="13" Height="13" Visibility="Collapsed" Margin="6,0,6,0" BorderThickness="1">
                    <Border.BorderBrush>
                        <LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource gray-700}" Offset="0.0"/>
                                    <GradientStop Color="{DynamicResource gray-800}" Offset="1.0"/>
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource gray-700}"/>
                                    <GradientStop Color="{DynamicResource gray-800}" Offset="1.0"/>
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.Background>
                    <Path x:Name="CheckMark" Width="7" Height="7" Visibility="Hidden" 
                          SnapsToDevicePixels="False" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0">
                        <Path.Stroke>
                            <SolidColorBrush Color="{DynamicResource blue-gray-500}"/>
                        </Path.Stroke>
                    </Path>
                </Border>
                <ContentPresenter x:Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True"/>
                <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" 
                           Margin="5,2,0,2" DockPanel.Dock="Right"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.Command" Value="{x:Null}"/>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Transparent" Offset="0"/>
                            <GradientStop Color="{DynamicResource gray-800}" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="{DynamicResource gray-800}" Offset="0"/>
                            <GradientStop Color="Transparent" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource blue-gray-500}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" BorderThickness="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>
                <ContentPresenter x:Name="HeaderHost" Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True"/>
                <TextBlock x:Name="InputGestureText" Grid.Column="2" 
                           Text="{TemplateBinding InputGestureText}" Margin="5,2,2,2" DockPanel.Dock="Right"/>
                <Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource blue-gray-500}"/>
                    </Path.Fill>
                </Path>
                <Popup x:Name="Popup" Placement="Right" HorizontalOffset="-4" 
                       IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" 
                       Focusable="False" PopupAnimation="Fade">
                    <Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" 
                            Background="{DynamicResource gray-700-brush}" BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource gray-800}"/>
                        </Border.BorderBrush>
                        <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Transparent" Offset="0"/>
                            <GradientStop Color="{DynamicResource gray-800}" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="{DynamicResource gray-800}" Offset="0"/>
                            <GradientStop Color="Transparent" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4"/>
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource blue-gray-500}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- MenuItem Style -->
    <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground" Value="{DynamicResource gray-200-brush}"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style TargetType="Window" x:Key="window">
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>
   <!-- <Style TargetType="Grid">
        <Setter Property="Background" Value="#c6c8ca"/>
    </Style>-->
    <!--<Style TargetType="TextBox">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style TargetType="PasswordBox">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>-->


    <!--Кнопки в DataGridHeader
    <Style TargetType="{x:Type Button}" x:Key="{ComponentResourceKey 
        ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" 
                                                                      Storyboard.TargetProperty="(Shape.Fill).
                                                                      (GradientBrush.GradientStops)[1].
                                                                      (GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" 
                                                                 Value="{StaticResource ControlPressedColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Border" SnapsToDevicePixels="True">
                            <Rectangle.Stroke>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="{DynamicResource BorderLightColor}"
                              Offset="0" />
                                    <GradientStop Color="{DynamicResource BorderMediumColor}"
                              Offset="1" />
                                </LinearGradientBrush>
                            </Rectangle.Stroke>
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="{DynamicResource ControlLightColor}"
                              Offset="0" />
                                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                              Offset="1" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Polygon x:Name="Arrow" HorizontalAlignment="Right"
                                 Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0"
                                 Stretch="Uniform" VerticalAlignment="Bottom">
                            <Polygon.Fill>
                                <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                            </Polygon.Fill>
                        </Polygon>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--DataGrid
    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="{DynamicResource BorderLightColor}"
                      Offset="0"/>
                    <GradientStop Color="{DynamicResource BorderDarkColor}"
                      Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border x:Name="border" SnapsToDevicePixels="True" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <Border.Background>
                            <SolidColorBrush Color="{DynamicResource ControlLightColor}"/>
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(Panel.Background).
                                                                      (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{DynamicResource ControlLightColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false" Background="Black">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <Button Focusable="false" 
                                                Command="{x:Static DataGrid.SelectAllCommand}"
                                                Style="{DynamicResource {ComponentResourceKey
                                            ResourceId=DataGridSelectAllButtonStyle, 
                                            TypeInTargetAssembly={x:Type DataGrid}}}"
                                                Visibility="{Binding HeadersVisibility, 
                                            ConverterParameter={x:Static DataGridHeadersVisibility.All}, 
                                            Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                            RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                Width="{Binding CellsPanelHorizontalOffset, 
                                            RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>

                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                        Grid.Column="1"
                                                                        Visibility="{Binding HeadersVisibility, 
                                            ConverterParameter={x:Static DataGridHeadersVisibility.Column}, 
                                            Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                            RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>

                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                Grid.ColumnSpan="2" Grid.Row="1"
                                                                CanContentScroll="{TemplateBinding CanContentScroll}"/>

                                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Grid.Row="1"
                                                   Orientation="Vertical" 
                                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                                   Maximum="{TemplateBinding ScrollableHeight}"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                   Value="{Binding VerticalOffset, Mode=OneWay,
                                            RelativeSource={RelativeSource TemplatedParent}}"/>

                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition 
                                                    Width="{Binding NonFrozenColumnsViewportHorizontalOffset, 
                                                    RelativeSource={RelativeSource 
                                                    AncestorType={x:Type DataGrid}}}"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>

                                            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1"
                                                       Orientation="Horizontal" 
                                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                                       Maximum="{TemplateBinding ScrollableWidth}"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                       Value="{Binding HorizontalOffset, Mode=OneWay, 
                                                RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <!--DataGridCell
    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border x:Name="border" BorderBrush="Transparent" BorderThickness="1"
                            Background="Transparent" SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CurrentStates">
                                <VisualState x:Name="Regular"/>
                                <VisualState x:Name="Current">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).
                                                                      (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource 
                                                DatagridCurrentCellBorderColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--DataGridRow
    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource ControlLightColor}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Transparent" Offset="0"/>
                                <GradientStop Color="{DynamicResource ControlLightColor}" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Normal_AlternatingRow">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                      Storyboard.TargetProperty="
                                                                      (Panel.Background).
                                                                      (GradientBrush.GradientStops)[0].
                                                                      (GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource ContentAreaColorLight}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                      Storyboard.TargetProperty="
                                                                      (Panel.Background).
                                                                      (GradientBrush.GradientStops)[1].
                                                                      (GradientStop.Color)">

                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource ContentAreaColorDark}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Normal_Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                      Storyboard.TargetProperty="
                                                                      (Panel.Background).
                                                                      (GradientBrush.GradientStops)[0].
                                                                      (GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource ControlMediumColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                      Storyboard.TargetProperty="
                                                                      (Panel.Background).
                                                                      (GradientBrush.GradientStops)[1].
                                                                      (GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource ControlDarkColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Unfocused_Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                      Storyboard.TargetProperty="
                                                                      (Panel.Background).
                                                                      (GradientBrush.GradientStops)[0].
                                                                      (GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource ControlMediumColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                      Storyboard.TargetProperty="
                                                                      (Panel.Background).
                                                                      (GradientBrush.GradientStops)[1].
                                                                      (GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource ControlDarkColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Normal_Editing">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                      Storyboard.TargetProperty="
                                                                      (Panel.Background).
                                                                      (GradientBrush.GradientStops)[0].
                                                                      (GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource ControlMediumColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                      Storyboard.TargetProperty="
                                                                      (Panel.Background).
                                                                      (GradientBrush.GradientStops)[1].
                                                                      (GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource ControlDarkColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="MouseOver_Editing">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                      Storyboard.TargetProperty="
                                                                      (Panel.Background).
                                                                      (GradientBrush.GradientStops)[0].
                                                                      (GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource ControlMediumColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                      Storyboard.TargetProperty="
                                                                      (Panel.Background).
                                                                      (GradientBrush.GradientStops)[1].
                                                                      (GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource ControlDarkColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="MouseOver_Unfocused_Editing">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                      Storyboard.TargetProperty="
                                                                      (Panel.Background).
                                                                      (GradientBrush.GradientStops)[0].
                                                                      (GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource ControlMediumColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                      Storyboard.TargetProperty="
                                                                      (Panel.Background).
                                                                      (GradientBrush.GradientStops)[1].
                                                                      (GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource ControlDarkColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Unfocused_Editing">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                      Storyboard.TargetProperty="
                                                                      (Panel.Background).
                                                                      (GradientBrush.GradientStops)[0].
                                                                      (GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource ControlMediumColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                      Storyboard.TargetProperty="
                                                                      (Panel.Background).
                                                                      (GradientBrush.GradientStops)[1].
                                                                      (GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource ControlDarkColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                      Storyboard.TargetProperty="
                                                                      (Panel.Background).
                                                                      (GradientBrush.GradientStops)[0].
                                                                      (GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource ControlMediumColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                      Storyboard.TargetProperty="
                                                                      (Panel.Background).
                                                                      (GradientBrush.GradientStops)[1].
                                                                      (GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource ControlMouseOverColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="MouseOver_Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                      Storyboard.TargetProperty="
                                                                      (Panel.Background).
                                                                      (GradientBrush.GradientStops)[0].
                                                                      (GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource ControlMouseOverColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                      Storyboard.TargetProperty="
                                                                      (Panel.Background).
                                                                      (GradientBrush.GradientStops)[1].
                                                                      (GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource ControlMouseOverColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="MouseOver_Unfocused_Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                      Storyboard.TargetProperty="
                                                                      (Panel.Background).
                                                                      (GradientBrush.GradientStops)[0].
                                                                      (GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource ControlMouseOverColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border"
                                                                      Storyboard.TargetProperty="
                                                                      (Panel.Background).
                                                                      (GradientBrush.GradientStops)[1].
                                                                      (GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource ControlMouseOverColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter Grid.Column="1"
                                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <DataGridDetailsPresenter Grid.Column="1"  Grid.Row="1"
                                                      Visibility="{TemplateBinding DetailsVisibility}"
                                                      SelectiveScrollingGrid.SelectiveScrollingOrientation=
                                                      "{Binding AreRowDetailsFrozen, 
                                ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
                                Converter={x:Static DataGrid.RowDetailsScrollingConverter}, 
                                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                            <DataGridRowHeader Grid.RowSpan="2"
                                               SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                               Visibility="{Binding HeadersVisibility, 
                                ConverterParameter={x:Static DataGridHeadersVisibility.Row}, 
                                Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--Style and template for the resize control on the DataGridRowHeader.
    <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Height" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeNS"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--Style and template for the DataGridRowHeader.
    <Style TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Normal_CurrentRow"/>
                                <VisualState x:Name="Unfocused_EditingRow"/>
                                <VisualState x:Name="Normal_EditingRow"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="rowHeaderBorder"
                                                                      Storyboard.TargetProperty="
                                                                      (Panel.Background).
                                                                      (GradientBrush.GradientStops)[1].
                                                                      (GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource ControlMouseOverColor}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver_CurrentRow"/>
                                <VisualState x:Name="MouseOver_Unfocused_EditingRow"/>
                                <VisualState x:Name="MouseOver_EditingRow"/>
                                <VisualState x:Name="MouseOver_Unfocused_Selected"/>
                                <VisualState x:Name="MouseOver_Selected"/>
                                <VisualState x:Name="MouseOver_Unfocused_CurrentRow_Selected"/>
                                <VisualState x:Name="MouseOver_CurrentRow_Selected"/>
                                <VisualState x:Name="Unfocused_Selected"/>
                                <VisualState x:Name="Unfocused_CurrentRow_Selected"/>
                                <VisualState x:Name="Normal_CurrentRow_Selected"/>
                                <VisualState x:Name="Normal_Selected"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="rowHeaderBorder" Width="10" BorderThickness="1">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0"/>
                                    <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0"/>
                                    <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <StackPanel Orientation="Horizontal">
                                <ContentPresenter VerticalAlignment="Center" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Control SnapsToDevicePixels="false"
                                         Template="{Binding ValidationErrorTemplate, 
                                    RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                                         Visibility="{Binding (Validation.HasError), 
                                    Converter={StaticResource bool2VisibilityConverter}, 
                                    RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"/>
                            </StackPanel>
                        </Border>

                        <Thumb x:Name="PART_TopHeaderGripper" 
                               Style="{StaticResource RowHeaderGripperStyle}"
                               VerticalAlignment="Top"/>
                        <Thumb x:Name="PART_BottomHeaderGripper" 
                               Style="{StaticResource RowHeaderGripperStyle}"
                               VerticalAlignment="Bottom"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--Style and template for the resize control on the DataGridColumnHeader.
    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--Style and template for the DataGridColumnHeader.
    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Border x:Name="columnHeaderBorder" BorderThickness="1" Padding="3,0,3,0">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="{DynamicResource BorderLightColor}"
                                                  Offset="0"/>
                                    <GradientStop Color="{DynamicResource BorderDarkColor}"
                                                  Offset="1"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="{DynamicResource ControlLightColor}"
                                                  Offset="0"/>
                                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                                                  Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>

                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left"
                               Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right"
                               Style="{StaticResource ColumnHeaderGripperStyle}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="{DynamicResource ControlLightColor}"
                                  Offset="0"/>
                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                                  Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--Style and template for the DataGridColumnHeadersPresenter.
    <Style TargetType="{x:Type DataGridColumnHeadersPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
                    <Grid>
                        <DataGridColumnHeader x:Name="PART_FillerColumnHeader" IsHitTestVisible="False"/>
                        <ItemsPresenter/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--Control colors.
    <Color x:Key="WindowColor">#FFE8EDF9</Color>
    <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
    <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="DisabledForegroundColor">#FF888888</Color>

    <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
    <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

    <Color x:Key="ControlLightColor">White</Color>
    <Color x:Key="ControlMediumColor">#FF7381F9</Color>
    <Color x:Key="ControlDarkColor">#FF211AA9</Color>

    <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
    <Color x:Key="ControlPressedColor">#FF211AA9</Color>


    <Color x:Key="GlyphColor">#FF444444</Color>
    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>-->

    <!--Border colors
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderMediumColor">#FF888888</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>

    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>-->

    <!--Control-specific resources.
    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

    <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
        <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
        <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#000000FF"
                    Offset="0" />
                <GradientStop Color="#600000FF"
                    Offset="0.4" />
                <GradientStop Color="#600000FF"
                    Offset="0.6" />
                <GradientStop Color="#000000FF"
                    Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>-->
        
        
        
    <!--<Style x:Key="dataGridColumnHeader" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="#343a40"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="#454d55"/>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="table-dark" TargetType="DataGrid">
        <Setter Property="Background" Value="#c6c8ca"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="#454d55"/>
            </Setter.Value>
        </Setter>
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource dataGridColumnHeader}"/>
    </Style>-->


    <!--<Style x:Key="dataGridColumnHeader" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="#343a40"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>
    <Style x:Key="table-dark" TargetType="DataGrid">
        <Setter Property="Background" Value="#c6c8ca"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="#95999c"/>
            </Setter.Value>
        </Setter>
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource dataGridColumnHeader}"/>
    </Style>
    <Style TargetType="TabItem">
        <Setter Property="Background" Value="#343a40"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>-->
</ResourceDictionary>